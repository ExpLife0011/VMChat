<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.vmloft.develop.app.chat">

    <!-- 项目权限配置 -->
    <!-- 相机 -->
    <uses-permission android:name="android.permission.CAMERA"/>
    <!-- 网络 -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- 录音 -->
    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
    <!-- 震动 -->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!-- 访问网络状态 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <!-- 访问WIFI状态 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <!-- 访问精确定位 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- 读取手机状态 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <!-- 写入外部存储 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <!--读取外部存储-->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <!--安装卸载文件系统-->
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
    <!-- 修改音频设置 -->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>
    <!-- 允许读写系统设置项 使用设置时需要 -->
    <uses-permission android:name="android.permission.WRITE_SETTINGS"/>
    <!-- 读取启动设置 -->
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/>
    <!--唤醒锁屏，音视频通话所需-->
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <!-- 开机自启动 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <!--获取当前和最近执行的任务
    TODO 已被弃用后期可能会添加另一个权限 REAL_GET_TASKS
    TODO https://android.googlesource.com/platform/frameworks/base/+/2d7576b%5E!/-->
    <uses-permission android:name="android.permission.GET_TASKS"/>
    <!--悬浮窗权限-->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>

    <!-- 程序的入口 -->
    <application
        android:name=".app.AppApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme.Default">
        <!--欢迎界面-->
        <activity
            android:name=".sign.WelcomeActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Launcher">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!-- 主界面 -->
        <activity
            android:name=".app.MainActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"/>

        <!-- 登录界面 -->
        <activity
            android:name=".sign.SignInActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateHidden"/>

        <!-- 注册界面 -->
        <activity
            android:name=".sign.SignUpActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateHidden"/>
        <!--申请与通知界面-->
        <activity
            android:name=".apply.ApplyForActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateHidden"/>
        <!-- 账户信息界面 -->
        <activity
            android:name=".contacts.UserActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"/>
        <!-- 聊天界面 -->
        <activity
            android:name=".chat.ChatActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateHidden"/>
        <!--视频通话界面-->
        <activity
            android:name=".call.VideoCallActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:launchMode="singleTask"
            android:theme="@style/AppTheme.Transparent"
            android:windowSoftInputMode="adjustNothing|stateAlwaysHidden"/>
        <!--语音通话界面-->
        <activity
            android:name=".call.VoiceCallActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Transparent"
            android:windowSoftInputMode="adjustNothing|stateAlwaysHidden"/>
        <!--显示大图界面 使用半透明主题-->
        <activity
            android:name=".chat.BigImageActivity"
            android:theme="@style/AppTheme.Transparent"
            android:windowSoftInputMode="adjustNothing|stateAlwaysHidden"/>
        <!-- 搜索界面 -->
        <activity
            android:name=".app.SearchActivity"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateVisible"/>
        <activity
            android:name=".setting.SettingsActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.Default"
            android:windowSoftInputMode="adjustResize|stateHidden"/>
        <!-- Activity 注册 end -->

        <!--通话广播监听-->
        <receiver
            android:name=".call.CallReceiver"
            android:enabled="true"
            android:exported="true">
        </receiver>


        <!--环信相关配置-->
        <!-- 设置环信应用的appkey -->
        <meta-data
            android:name="EASEMOB_APPKEY"
            android:value="${em_appkey}"/>
        <!--配置私有化聊天地址-->
        <!--<meta-data-->
        <!--android:name="EASEMOB_CHAT_ADDRESS"-->
        <!--android:value="im.easemob.com"/>-->
        <!--&lt;!&ndash;配置私有化聊天端口&ndash;&gt;-->
        <!--<meta-data-->
        <!--android:name="EASEMOB_CHAT_PORT"-->
        <!--android:value="443"/>-->
        <!--&lt;!&ndash;配置私有化rest接口地址&ndash;&gt;-->
        <!--<meta-data-->
        <!--android:name="EASEMOB_API_URL"-->
        <!--android:value="a1.easemob.com:80"/>-->
        <!--声明sdk所需的 Service SDK核心功能-->
        <service
            android:name="com.hyphenate.chat.EMChatService"
            android:exported="true"
            android:process=":chat"/>
        <!-- 声明 SDK 所需的receiver -->
        <receiver android:name="com.hyphenate.chat.EMMonitorReceiver">
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED"/>

                <data android:scheme="package"/>
            </intent-filter>
            <!-- 可选filter -->
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.USER_PRESENT"/>
            </intent-filter>
        </receiver>
        <!-- 环信sdk配置 end -->

        <!--Google 推送相关配置-->
        <!--配置 Google 推送需要的权限，其中的包名需要改成自己项目的包名-->
        <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE"/>
        <permission
            android:name="net.melove.app.chat.permission.C2D_MESSAGE"
            android:protectionLevel="signature"
            />
        <uses-permission android:name="net.melove.app.chat.permission.C2D_MESSAGE"/>
        <!--GCM 推送广播接收器-->
        <receiver
            android:name="com.hyphenate.chat.EMGCMBroadcastReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND">
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE"/>

                <category android:name="net.melove.app.chat"/>
            </intent-filter>
        </receiver>
        <!--GCM 推送的本地 Service-->
        <service
            android:name="com.hyphenate.chat.EMGCMListenerService"
            android:exported="false">
        </service>
        <!--自定义实现 GCM 推送信息接收处理类-->
        <receiver
            android:name=".receiver.GCMBroadcastReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="com.hyphenate.sdk.push"/>
                <category android:name="net.melove.app.chat"/>
            </intent-filter>
        </receiver>
        <!--GCM推送配置 end-->

        <!--华为推送推送配置-->
        <!-- 第三方相关, 接收Push消息（注册、Push消息、Push连接状态、标签，LBS上报结果）广播 -->
        <receiver android:name=".receiver.HWPushReceiver">
            <intent-filter>
                <!-- 必须,用于接收token-->
                <action android:name="com.huawei.android.push.intent.REGISTRATION"/>
                <!-- 必须，用于接收消息-->
                <action android:name="com.huawei.android.push.intent.RECEIVE"/>
                <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调-->
                <action android:name="com.huawei.android.push.intent.CLICK"/>
                <!-- 可选，查看push通道是否连接，不查看则不需要-->
                <action android:name="com.huawei.intent.action.PUSH_STATE"/>
                <!-- 可选，标签、地理位置上报回应，不上报则不需要 -->
                <action android:name="com.huawei.android.push.plugin.RESPONSE"/>
            </intent-filter>
            <meta-data
                android:name="CS_cloud_ablitity"
                android:value="successRateAnalytics"/>
        </receiver>
        <!-- 备注：Push相关的android组件需要添加到业务的AndroidManifest.xml, Push相关android组件运行在另外一个进程是为了防止Push服务异常而影响主业务 -->
        <!-- PushSDK:PushSDK接收外部请求事件入口 -->
        <receiver
            android:name="com.huawei.android.pushagent.PushEventReceiver"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.huawei.android.push.intent.REFRESH_PUSH_CHANNEL"/>
                <action android:name="com.huawei.intent.action.PUSH"/>
                <action android:name="com.huawei.intent.action.PUSH_ON"/>
                <action android:name="com.huawei.android.push.PLUGIN"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED"/>
                <action android:name="android.intent.action.PACKAGE_REMOVED"/>

                <data android:scheme="package"/>
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.huawei.android.pushagent.PushBootReceiver"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.huawei.android.push.intent.REGISTER"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
            </intent-filter>
            <meta-data
                android:name="CS_cloud_version"
                android:value="\u0032\u0037\u0030\u0035"/>
        </receiver>
        <!-- PushSDK:Push服务 -->
        <service
            android:name="com.huawei.android.pushagent.PushService"
            android:process=":pushservice">
        </service>
        <!--华为推送 end-->

        <!-- 小米推送相关配置-->
        <!--小米推送自定义权限，其中的包名需要改成自己的项目包名-->
        <permission
            android:name="net.melove.app.chat.permission.MIPUSH_RECEIVE"
            android:protectionLevel="signature"/>
        <uses-permission android:name="net.melove.app.chat.permission.MIPUSH_RECEIVE"/>
        <!--小米推送相关服务-->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice"/>
        <!--注：XMJobService 必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <!--<service-->
        <!--android:name="com.xiaomi.push.service.XMJobService"-->
        <!--android:enabled="true"-->
        <!--android:exported="false"-->
        <!--android:permission="android.permission.BIND_JOB_SERVICE"-->
        <!--android:process=":pushservice" />-->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true"/>
        <!--注：MessageHandleService 必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true"/>
        <!--小米推送广播接收器-->
        <receiver
            android:name=".receiver.MiPushReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR"/>
            </intent-filter>
        </receiver>
        <!--小米推送 end-->

        <!--这里使用TalkingData进行数据统计-->
        <meta-data
            android:name="TD_APP_ID"
            android:value="${td_app_id}"/>
        <!-- 设置多渠道打包的渠道名，TD_CHANNEL_ID 是渠道名占位符-->
        <meta-data
            android:name="TD_CHANNEL_ID"
            android:value="${td_channel_id}"/>

    </application>

</manifest>